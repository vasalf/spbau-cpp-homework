Реализовать шаблонный класс my_vector.
Можно считать, что для шаблонного параметра выполняются следующие требования:

- default constructible (имеет конструктор по умолчанию)
- copy constructible (имеет конструктор копирования)
- assignable (имеет оператор присваивания)

1. Интерфейс класса определен в my_vector.h.
Функции работают по аналогии с std::vector.
* push_back увеличивает размер масива в два раза, когда место закончилось.
* Методы и конструкторы, которые увеличивают capacity,
делают его равным минимальной достаточной степени двойки.

В объявлении класса необходимо расставить const там, где нужно.

2. Вектор должен работать для элементов типа int и Product. 
Интерфейс класса Product задан в main.cpp, его необходимо доработать,
чтобы он соответствовал требованиям вектора.

3. Перегрузить operator<< для вывода в поток для классов my_vector и Product.
Оператор выводит через пробел все элементы/поля (без перевода строки).

<vec[0]> <vec[1]> ... <vec[size-1]>
<name> <quantity> <price>

4. Реализовать шаблонную функцию test_my_vector,
которая тестирует все методы класса my_vector.
Вызвать эту функцию в main для int и Product.

5. Имя папки с решением в вашем репозитории: lab_12.
Имя исполняемого файла: main
Исполняемый файл после сборки находится в каталоге с решением.
